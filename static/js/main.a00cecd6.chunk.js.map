{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Container/Container.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Container/Container.jsx","components/Searchbar/Searchbar.jsx","components/services/apiService.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/ErrorView/ErrorView.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Container","children","className","s","container","Searchbar","onHandleSubmit","useState","name","setName","onSubmit","e","preventDefault","trim","toast","error","SearchForm","type","SearchForm__button","SearchForm__buttonLabel","SearchForm__input","autoComplete","autoFocus","value","onChange","currentTarget","placeholder","api","fetchImages","nextQuery","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","webformatURL","largeImageURL","tags","onOpenModal","src","alt","data-source","ImageGalleryItem__image","onClick","Loader","color","height","width","timeout","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onToggleModal","handleBackdropClick","target","window","addEventListener","this","removeEventListener","createPortal","Overlay","Component","ErrorView","message","role","Button","onLoadMore","ImageGallery","query","images","setPage","setImages","setLargeImageURL","setError","isLoading","setIsLoading","showModal","setShowModal","useEffect","console","log","apiService","newImages","total","prevImages","hits","catch","err","finally","dataset","source","toggleModal","scrollPage","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","textError","map","id","length","prevPage","autoClose","App","setQuery","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a00cecd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__VyosP\",\"ImageGalleryItem__image\":\"ImageGalleryItem_ImageGalleryItem__image__3YG4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1FjmE\",\"Modal\":\"Modal_Modal__3p4-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3_1Pq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__zaoAr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3oX9m\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import { useState } from 'react';\n// import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// class Searchbar extends Component {\n//   state = {\n//     name: '',\n//   };\n\nfunction Searchbar({ onHandleSubmit }) {\n  const [name, setName] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name.trim() === '') {\n      toast.error('Что ищем ?');\n      return;\n    }\n    // this.props.onHandleSubmit(name);\n    // console.log(this.state.name);\n    onHandleSubmit(name);\n    setName('');\n  };\n  const handleChange = e => {\n    setName(e.currentTarget.value);\n  };\n\n  return (\n    <header onSubmit={handleSubmit} className={s.Searchbar}>\n      <form className={s.SearchForm}>\n        <button type=\"submit\" className={s.SearchForm__button}>\n          <span className={s.SearchForm__buttonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.SearchForm__input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onHandleSubmit: PropTypes.func.isRequired,\n  // onSearchQueryChange: PropTypes.func.isRequired,\n  // value: PropTypes.string.isRequired,\n};\n\nexport default Searchbar;\n","function fetchImages(nextQuery, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${nextQuery}&page=${page}&key=18452046-d075d28130c097165687e8e16&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error('No response from server'));\n  });\n}\n\nconst api = { fetchImages };\n\nexport default api;\n","import PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  webformatURL,\n  largeImageURL,\n  tags,\n  onOpenModal,\n}) {\n  return (\n    <li className={s.ImageGalleryItem}>\n      <img\n        src={webformatURL}\n        alt={tags}\n        data-source={largeImageURL}\n        className={s.ImageGalleryItem__image}\n        onClick={onOpenModal}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport Spinner from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nfunction Loader() {\n  return (\n    <Spinner\n      className={Loader}\n      type=\"TailSpin\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />\n  );\n}\n\nexport default Loader;\n","import { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modalPortal');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onToggleModal();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onToggleModal();\n    }\n  };\n\n  render() {\n    const { largeImageURL } = this.props;\n\n    return createPortal(\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\n        <div className={s.Modal}>\n          <img src={largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onToggleModal: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import PropTypes from 'prop-types';\n\nexport default function ErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>Sorry, something went wrong. Error: {message}</p>\n    </div>\n  );\n}\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ onLoadMore }) {\n  return (\n    <button type=\"button\" className={s.Button} onClick={onLoadMore}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n};\n","// import { Component } from 'react';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport apiService from '../services/apiService';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\nimport Loader from '../Loader';\nimport Modal from '../Modal';\nimport ErrorView from '../ErrorView';\nimport Button from '../Button';\n\n// class ImageGallery extends Component {\n//   state = {\n//     images: [],\n//     largeImageURL: '',\n//     page: 1,\n//     error: null,\n//     isLoading: false,\n//     showModal: false,\n//   };\n\nfunction ImageGallery({ query, page, images, setPage, setImages }) {\n  // const [images, setImages] = useState(newImages);\n  const [largeImageURL, setLargeImageURL] = useState('');\n  // const [page, setPage] = useState(newPage);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    console.log(query);\n    if (query === '') {\n      return;\n    }\n\n    setIsLoading(true);\n\n    apiService\n      .fetchImages(query, page)\n      .then(newImages => {\n        if (newImages.total !== 0) {\n          setImages(prevImages => [...prevImages, ...newImages.hits]);\n        }\n      })\n      .catch(err => {\n        setError(err);\n      })\n      .finally(setIsLoading(false));\n  }, [query, page, setImages]);\n\n  const onLoadMore = () => {\n    setIsLoading(true);\n    setPage(prevPage => prevPage + 1);\n    scrollPage();\n  };\n  const onOpenModal = e => {\n    setLargeImageURL(e.target.dataset.source);\n    toggleModal();\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  const scrollPage = () => {\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 160,\n        behavior: 'smooth',\n      });\n    }, 500);\n  };\n\n  // render() {\n  //   const { images, error, isLoading, largeImageURL, showModal } = this.state;\n  return (\n    <div>\n      {error && <ErrorView textError={error.message} />}\n\n      {\n        <ul className={s.ImageGallery}>\n          {images.map(({ id, webformatURL, largeImageURL, tags }) => (\n            <ImageGalleryItem\n              key={id}\n              webformatURL={webformatURL}\n              largeImageURL={largeImageURL}\n              tags={tags}\n              onOpenModal={onOpenModal}\n            />\n          ))}\n        </ul>\n      }\n      {isLoading && <Loader />}\n      {!isLoading && images.length > 0 && <Button onLoadMore={onLoadMore} />}\n      {showModal && (\n        <Modal onToggleModal={toggleModal} largeImageURL={largeImageURL} />\n      )}\n      {<ToastContainer autoClose={3000} />}\n    </div>\n  );\n}\n\nImageGallery.propTypes = {\n  query: PropTypes.string.isRequired,\n};\n\nexport default ImageGallery;\n","// import { Component } from 'react';\nimport { useState } from 'react';\nimport Container from './components/Container';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\n\n// class App extends Component {\n//   state = {\n//     query: '',\n//   };\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [images, setImages] = useState([]);\n  // const page = 1;\n  // const newImages = [];\n\n  const handleSubmit = name => {\n    setQuery(name);\n    setPage(1);\n    setImages([]);\n  };\n\n  // const { query } = this.state;\n  return (\n    <Container>\n      <Searchbar onHandleSubmit={handleSubmit} />\n\n      <ImageGallery\n        query={query}\n        page={page}\n        images={images}\n        setPage={setPage}\n        setImages={setImages}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__QDeU5\",\"SearchForm\":\"Searchbar_SearchForm__2YGuX\",\"SearchForm__button\":\"Searchbar_SearchForm__button__3ErG4\",\"SearchForm__buttonLabel\":\"Searchbar_SearchForm__buttonLabel__3kfxt\",\"SearchForm__input\":\"Searchbar_SearchForm__input__3Qho5\"};"],"sourceRoot":""}